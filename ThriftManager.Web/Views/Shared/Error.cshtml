@* @model ErrorViewModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>
 *@

@model ThriftManager.Web.Models.ErrorViewModel

@{
    ViewData["Title"] = "Error";
}

<h2>Error</h2>
@if (Model != null)
{
    <p>@Model.Message</p>
}
@if (Model != null && Model.ShowRequestId)
{
    <p>
        <strong>Request ID: 
            <code>@Model.RequestId</code>
        </strong>
    </p>
}

@* @model Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary

@{
    ViewData["Title"] = "Error";
    var exception = ViewData["Exception"] as Exception;
    var statusCode = (int)ViewData["StatusCode"];
}

<h1>Error @statusCode</h1>
<p>An error occurred while processing your request.</p>

@if (exception != null)
{
    <p>@exception.Message</p>
    <pre>@exception.StackTrace</pre>
} *@
